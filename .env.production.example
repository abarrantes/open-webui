# Production Environment Configuration for Open WebUI
# Copy this file to .env.production and fill in your values

# ===========================================
# REQUIRED SETTINGS
# ===========================================

# OpenAI API Configuration (REQUIRED)
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_API_BASE_URL=https://api.openai.com/v1

# Domain and SSL Configuration (REQUIRED)
DOMAIN=your-domain.com
ACME_EMAIL=your-email@example.com

# Security (REQUIRED - generate a random secret)
# Generate with: openssl rand -base64 32
WEBUI_SECRET_KEY=your-very-secure-random-secret-key-here

# ===========================================
# APPLICATION SETTINGS
# ===========================================

# Application Configuration
WEBUI_NAME="Your Open WebUI"
PORT=3000

# Docker Image Settings
IMAGE_NAME=open-webui
IMAGE_TAG=latest

# Default Models (comma-separated list)
DEFAULT_MODELS=gpt-4,gpt-4-turbo,gpt-3.5-turbo

# ===========================================
# AUTHENTICATION & ACCESS
# ===========================================

# Authentication
WEBUI_AUTH=true

# User Registration (set to false for private instances)
ENABLE_SIGNUP=false

# Admin User (first user becomes admin if signup is disabled)
ADMIN_EMAIL=admin@your-domain.com

# ===========================================
# FEATURE FLAGS
# ===========================================

# Web Search (requires additional API keys below)
ENABLE_WEB_SEARCH=true

# Image Generation (uses OpenAI DALL-E)
ENABLE_IMAGE_GENERATION=true

# Community Features
ENABLE_COMMUNITY_SHARING=false
ENABLE_MESSAGE_RATING=true

# Code Execution (requires additional setup)
ENABLE_CODE_EXECUTION=false

# ===========================================
# OPTIONAL: WEB SEARCH PROVIDERS
# (Enable one or more if ENABLE_WEB_SEARCH=true)
# ===========================================

# Google Search (requires Google Custom Search API)
# GOOGLE_PSE_API_KEY=your-google-api-key
# GOOGLE_PSE_ENGINE_ID=your-search-engine-id

# Bing Search
# BING_SEARCH_V7_ENDPOINT=https://api.bing.microsoft.com/v7.0/search
# BING_SEARCH_V7_SUBSCRIPTION_KEY=your-bing-api-key

# SearxNG (self-hosted search)
# SEARXNG_QUERY_URL=https://your-searxng-instance.com/search

# Brave Search
# BRAVE_SEARCH_API_KEY=your-brave-api-key

# DuckDuckGo (no API key required)
WEB_SEARCH_ENGINE=duckduckgo

# ===========================================
# OPTIONAL: ADVANCED SETTINGS
# ===========================================

# RAG (Retrieval Augmented Generation) Settings
RAG_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
CHUNK_SIZE=1000
CHUNK_OVERLAP=100

# File Upload Limits
RAG_FILE_MAX_SIZE=100  # MB
RAG_FILE_MAX_COUNT=20

# Performance Settings
RAG_TOP_K=5
RAG_RELEVANCE_THRESHOLD=0.0

# ===========================================
# OPTIONAL: INTEGRATIONS
# ===========================================

# Google Drive Integration
# ENABLE_GOOGLE_DRIVE_INTEGRATION=true
# GOOGLE_DRIVE_CLIENT_ID=your-google-drive-client-id
# GOOGLE_DRIVE_API_KEY=your-google-drive-api-key

# OneDrive Integration
# ENABLE_ONEDRIVE_INTEGRATION=true
# ONEDRIVE_CLIENT_ID=your-onedrive-client-id

# ===========================================
# OPTIONAL: EXTERNAL SERVICES
# ===========================================

# Webhook URL for notifications
# WEBHOOK_URL=https://your-webhook-url.com

# Custom Banners (JSON format)
# WEBUI_BANNERS='[{"id": "banner-1", "type": "info", "title": "Welcome", "content": "Welcome to our Open WebUI instance!"}]'

# ===========================================
# DEVELOPMENT/DEBUGGING (set to false in production)
# ===========================================

# Telemetry and Analytics (recommended: false)
ANONYMIZED_TELEMETRY=false
SCARF_NO_ANALYTICS=true
DO_NOT_TRACK=true

# ===========================================
# NOTES
# ===========================================

# 1. After setting up your .env.production file, deploy with:
#    docker-compose -f docker-compose.prod.yml --env-file .env.production up -d

# 2. For first-time setup, create an admin user by visiting your domain
#    The first user to register will automatically become an admin

# 3. Make sure your domain's DNS points to your Hetzner server's IP

# 4. The SSL certificate will be automatically generated by Let's Encrypt

# 5. For additional security, consider setting up a firewall:
#    ufw allow 22/tcp && ufw allow 80/tcp && ufw allow 443/tcp && ufw enable